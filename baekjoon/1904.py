# f1 = 이전횟수에 1을 추가하는 경우, f00 = 이전횟수에 00을 추가하는 경우
# f(n) = f1(n-1) + f00(n-2)

""" 메모리초과
arr = [0,1,2]

n = int(input())

for i in range(2,n):
    arr.append(arr[-1]+arr[-2])
print(arr[n])
"""
a, b = 1,2

n = int(input())

if n == 1 or n == 2 :
    print(n)
else :
    for i in range(2,n):
        b, a = (b+a)%15746, b
    print(b%15746)


"""
# 임의 정밀도
b, a = (b+a)%15746, b || b, a = b+a, b
계속된 반복으로 값이 커지게 되면 시간복잡도 차이에서 어떤 차이를 보일까?

파이썬은 임의 정밀도를 사용하기 때문에 나누기 연산이 없는 경우에는 시간복잡도가 크게 늘어나게 된다.

연산으로 값이 커질때마다, 일정한 저장할 공간보다 더욱 커지게 될경우 새로운 공간을 할당하고 이자리에 값을 채워넣게 된다.
나누기 연산이 제외될 경우 계속해서 새로운 공간을 할당하고 값을 채워넣어야하기 떄문에 시간복잡도가 크게 늘어나게 된다.
"""